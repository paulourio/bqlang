// Code generated by gocc; DO NOT EDIT.

package parser

type (
	ProdTab      [numProductions]ProdTabEntry
	ProdTabEntry struct {
		String     string
		Id         string
		NTType     int
		Index      int
		NumSymbols int
		ReduceFunc func([]Attrib, interface{}) (Attrib, error)
	}
	Attrib interface {
	}
)

var productionsTable = ProdTab{
	ProdTabEntry{
		String: `S' : Script	<<  >>`,
		Id:         "S'",
		NTType:     0,
		Index:      0,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Script : Element	<< NewScript(X[0]) >>`,
		Id:         "Script",
		NTType:     1,
		Index:      1,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return NewScript(X[0])
		},
	},
	ProdTabEntry{
		String: `Script : Script Element	<< WithExtraChild(X[0], X[1]) >>`,
		Id:         "Script",
		NTType:     1,
		Index:      2,
		NumSymbols: 2,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return WithExtraChild(X[0], X[1])
		},
	},
	ProdTabEntry{
		String: `Script : Script TemplateComment	<< WithExtraChild(X[0], X[1]) >>`,
		Id:         "Script",
		NTType:     1,
		Index:      3,
		NumSymbols: 2,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return WithExtraChild(X[0], X[1])
		},
	},
	ProdTabEntry{
		String: `Script : Script TemplateForBlock	<< WithExtraChild(X[0], X[1]) >>`,
		Id:         "Script",
		NTType:     1,
		Index:      4,
		NumSymbols: 2,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return WithExtraChild(X[0], X[1])
		},
	},
	ProdTabEntry{
		String: `Script : Script TemplateIfBlock	<< WithExtraChild(X[0], X[1]) >>`,
		Id:         "Script",
		NTType:     1,
		Index:      5,
		NumSymbols: 2,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return WithExtraChild(X[0], X[1])
		},
	},
	ProdTabEntry{
		String: `Script : Script TemplateSetBlock	<< WithExtraChild(X[0], X[1]) >>`,
		Id:         "Script",
		NTType:     1,
		Index:      6,
		NumSymbols: 2,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return WithExtraChild(X[0], X[1])
		},
	},
	ProdTabEntry{
		String: `Script : Script TemplateVariable	<< WithExtraChild(X[0], X[1]) >>`,
		Id:         "Script",
		NTType:     1,
		Index:      7,
		NumSymbols: 2,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return WithExtraChild(X[0], X[1])
		},
	},
	ProdTabEntry{
		String: `Element : TemplateForBlock	<<  >>`,
		Id:         "Element",
		NTType:     2,
		Index:      8,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Element : TemplateIfBlock	<<  >>`,
		Id:         "Element",
		NTType:     2,
		Index:      9,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Element : TemplateSetBlock	<<  >>`,
		Id:         "Element",
		NTType:     2,
		Index:      10,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Element : TemplateComment	<<  >>`,
		Id:         "Element",
		NTType:     2,
		Index:      11,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Element : TemplateVariable	<<  >>`,
		Id:         "Element",
		NTType:     2,
		Index:      12,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Element : Element2	<<  >>`,
		Id:         "Element",
		NTType:     2,
		Index:      13,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Element2 : Comment	<<  >>`,
		Id:         "Element2",
		NTType:     3,
		Index:      14,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Element2 : identifier	<<  >>`,
		Id:         "Element2",
		NTType:     3,
		Index:      15,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Element2 : bytes_literal	<<  >>`,
		Id:         "Element2",
		NTType:     3,
		Index:      16,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Element2 : string_literal	<<  >>`,
		Id:         "Element2",
		NTType:     3,
		Index:      17,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Element2 : integer_literal	<<  >>`,
		Id:         "Element2",
		NTType:     3,
		Index:      18,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Element2 : floating_point_literal	<<  >>`,
		Id:         "Element2",
		NTType:     3,
		Index:      19,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Element2 : newline	<<  >>`,
		Id:         "Element2",
		NTType:     3,
		Index:      20,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Element2 : "*"	<<  >>`,
		Id:         "Element2",
		NTType:     3,
		Index:      21,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Element2 : "<"	<<  >>`,
		Id:         "Element2",
		NTType:     3,
		Index:      22,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Element2 : ">"	<<  >>`,
		Id:         "Element2",
		NTType:     3,
		Index:      23,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Element2 : "["	<<  >>`,
		Id:         "Element2",
		NTType:     3,
		Index:      24,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Element2 : "]"	<<  >>`,
		Id:         "Element2",
		NTType:     3,
		Index:      25,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Element2 : "("	<<  >>`,
		Id:         "Element2",
		NTType:     3,
		Index:      26,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Element2 : ")"	<<  >>`,
		Id:         "Element2",
		NTType:     3,
		Index:      27,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Element2 : ","	<<  >>`,
		Id:         "Element2",
		NTType:     3,
		Index:      28,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Element2 : "."	<<  >>`,
		Id:         "Element2",
		NTType:     3,
		Index:      29,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Element2 : "|"	<<  >>`,
		Id:         "Element2",
		NTType:     3,
		Index:      30,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Element2 : "^"	<<  >>`,
		Id:         "Element2",
		NTType:     3,
		Index:      31,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Element2 : "&"	<<  >>`,
		Id:         "Element2",
		NTType:     3,
		Index:      32,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Element2 : "<<"	<<  >>`,
		Id:         "Element2",
		NTType:     3,
		Index:      33,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Element2 : ">>"	<<  >>`,
		Id:         "Element2",
		NTType:     3,
		Index:      34,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Element2 : "=>"	<<  >>`,
		Id:         "Element2",
		NTType:     3,
		Index:      35,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Element2 : "/"	<<  >>`,
		Id:         "Element2",
		NTType:     3,
		Index:      36,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Element2 : "+"	<<  >>`,
		Id:         "Element2",
		NTType:     3,
		Index:      37,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Element2 : "-"	<<  >>`,
		Id:         "Element2",
		NTType:     3,
		Index:      38,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Element2 : "||"	<<  >>`,
		Id:         "Element2",
		NTType:     3,
		Index:      39,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Element2 : "<>"	<<  >>`,
		Id:         "Element2",
		NTType:     3,
		Index:      40,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Element2 : "!="	<<  >>`,
		Id:         "Element2",
		NTType:     3,
		Index:      41,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Element2 : "="	<<  >>`,
		Id:         "Element2",
		NTType:     3,
		Index:      42,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Element2 : "<"	<<  >>`,
		Id:         "Element2",
		NTType:     3,
		Index:      43,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Element2 : "<="	<<  >>`,
		Id:         "Element2",
		NTType:     3,
		Index:      44,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Element2 : ">"	<<  >>`,
		Id:         "Element2",
		NTType:     3,
		Index:      45,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Element2 : ">="	<<  >>`,
		Id:         "Element2",
		NTType:     3,
		Index:      46,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Element2 : ";"	<<  >>`,
		Id:         "Element2",
		NTType:     3,
		Index:      47,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Element2 : "."	<<  >>`,
		Id:         "Element2",
		NTType:     3,
		Index:      48,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Element2 : "@"	<<  >>`,
		Id:         "Element2",
		NTType:     3,
		Index:      49,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Element2 : "{"	<<  >>`,
		Id:         "Element2",
		NTType:     3,
		Index:      50,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Element2 : "}"	<<  >>`,
		Id:         "Element2",
		NTType:     3,
		Index:      51,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Element2 : "~"	<<  >>`,
		Id:         "Element2",
		NTType:     3,
		Index:      52,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Element2 : "else"	<<  >>`,
		Id:         "Element2",
		NTType:     3,
		Index:      53,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Element2 : "if"	<<  >>`,
		Id:         "Element2",
		NTType:     3,
		Index:      54,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Element2 : "for"	<<  >>`,
		Id:         "Element2",
		NTType:     3,
		Index:      55,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Element2 : "endfor"	<<  >>`,
		Id:         "Element2",
		NTType:     3,
		Index:      56,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Element2 : "elif"	<<  >>`,
		Id:         "Element2",
		NTType:     3,
		Index:      57,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Element2 : "endif"	<<  >>`,
		Id:         "Element2",
		NTType:     3,
		Index:      58,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Element2 : "set"	<<  >>`,
		Id:         "Element2",
		NTType:     3,
		Index:      59,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Element2 : "?"	<<  >>`,
		Id:         "Element2",
		NTType:     3,
		Index:      60,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Comment : comment	<< NewComment(X[0]) >>`,
		Id:         "Comment",
		NTType:     4,
		Index:      61,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return NewComment(X[0])
		},
	},
	ProdTabEntry{
		String: `TemplateSetBlock : TemplateSetBlockPrefix template_block_end	<< UpdateLoc(X[0], X[1]) >>`,
		Id:         "TemplateSetBlock",
		NTType:     5,
		Index:      62,
		NumSymbols: 2,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return UpdateLoc(X[0], X[1])
		},
	},
	ProdTabEntry{
		String: `TemplateSetBlockPrefix : template_block_start "set" "="	<< NewTemplateSetBlock(X[0]) >>`,
		Id:         "TemplateSetBlockPrefix",
		NTType:     6,
		Index:      63,
		NumSymbols: 3,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return NewTemplateSetBlock(X[0])
		},
	},
	ProdTabEntry{
		String: `TemplateSetBlockPrefix : TemplateSetBlockPrefix Element	<< WithExtraChild(X[0], X[1]) >>`,
		Id:         "TemplateSetBlockPrefix",
		NTType:     6,
		Index:      64,
		NumSymbols: 2,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return WithExtraChild(X[0], X[1])
		},
	},
	ProdTabEntry{
		String: `TemplateIfBlock : TemplateIfBlockPrefix TemplateIfEnd	<< UpdateLoc(X[0], X[1]) >>`,
		Id:         "TemplateIfBlock",
		NTType:     7,
		Index:      65,
		NumSymbols: 2,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return UpdateLoc(X[0], X[1])
		},
	},
	ProdTabEntry{
		String: `TemplateIfBlock : TemplateIfBlockPrefix TemplateElse Element TemplateIfEnd	<< func() (Attrib, error) {
          n, err := WithExtraChild(X[0], X[2])
          if err != nil { return nil, err }

          return UpdateLoc(n, X[3])
      }() >>`,
		Id:         "TemplateIfBlock",
		NTType:     7,
		Index:      66,
		NumSymbols: 4,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return func() (Attrib, error) {
          n, err := WithExtraChild(X[0], X[2])
          if err != nil { return nil, err }

          return UpdateLoc(n, X[3])
      }()
		},
	},
	ProdTabEntry{
		String: `TemplateIfBlock : TemplateIfBlockPrefix TemplateElse TemplateIfEnd	<< UpdateLoc(X[0], X[2]) >>`,
		Id:         "TemplateIfBlock",
		NTType:     7,
		Index:      67,
		NumSymbols: 3,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return UpdateLoc(X[0], X[2])
		},
	},
	ProdTabEntry{
		String: `TemplateIfBlockPrefix : TemplateIfBegin	<<  >>`,
		Id:         "TemplateIfBlockPrefix",
		NTType:     8,
		Index:      68,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `TemplateIfBlockPrefix : TemplateIfBlockPrefix Element	<< WithExtraChild(X[0], X[1]) >>`,
		Id:         "TemplateIfBlockPrefix",
		NTType:     8,
		Index:      69,
		NumSymbols: 2,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return WithExtraChild(X[0], X[1])
		},
	},
	ProdTabEntry{
		String: `TemplateIfBegin : TemplateIfBeginPrefix template_block_end	<< UpdateLoc(X[0], X[1]) >>`,
		Id:         "TemplateIfBegin",
		NTType:     9,
		Index:      70,
		NumSymbols: 2,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return UpdateLoc(X[0], X[1])
		},
	},
	ProdTabEntry{
		String: `TemplateIfBeginPrefix : template_block_start "if"	<< NewTemplateIfBlock(X[0]) >>`,
		Id:         "TemplateIfBeginPrefix",
		NTType:     10,
		Index:      71,
		NumSymbols: 2,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return NewTemplateIfBlock(X[0])
		},
	},
	ProdTabEntry{
		String: `TemplateIfBeginPrefix : TemplateIfBeginPrefix Element	<< WithExtraChild(X[0], X[1]) >>`,
		Id:         "TemplateIfBeginPrefix",
		NTType:     10,
		Index:      72,
		NumSymbols: 2,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return WithExtraChild(X[0], X[1])
		},
	},
	ProdTabEntry{
		String: `TemplateIfEnd : template_block_start "endif" template_block_end	<< X[2], nil >>`,
		Id:         "TemplateIfEnd",
		NTType:     11,
		Index:      73,
		NumSymbols: 3,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return X[2], nil
		},
	},
	ProdTabEntry{
		String: `TemplateElse : template_block_start "else" template_block_end	<< X[2], nil >>`,
		Id:         "TemplateElse",
		NTType:     12,
		Index:      74,
		NumSymbols: 3,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return X[2], nil
		},
	},
	ProdTabEntry{
		String: `TemplateForBlock : TemplateForBlockPrefix TemplateForEnd	<< UpdateLoc(X[0], X[1]) >>`,
		Id:         "TemplateForBlock",
		NTType:     13,
		Index:      75,
		NumSymbols: 2,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return UpdateLoc(X[0], X[1])
		},
	},
	ProdTabEntry{
		String: `TemplateForBlockPrefix : TemplateForBegin Element	<< WithExtraChild(X[0], X[1]) >>`,
		Id:         "TemplateForBlockPrefix",
		NTType:     14,
		Index:      76,
		NumSymbols: 2,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return WithExtraChild(X[0], X[1])
		},
	},
	ProdTabEntry{
		String: `TemplateForBlockPrefix : TemplateForBlockPrefix Element	<< WithExtraChild(X[0], X[1]) >>`,
		Id:         "TemplateForBlockPrefix",
		NTType:     14,
		Index:      77,
		NumSymbols: 2,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return WithExtraChild(X[0], X[1])
		},
	},
	ProdTabEntry{
		String: `TemplateForBegin : TemplateForBeginPrefix template_block_end	<< UpdateLoc(X[0], X[1]) >>`,
		Id:         "TemplateForBegin",
		NTType:     15,
		Index:      78,
		NumSymbols: 2,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return UpdateLoc(X[0], X[1])
		},
	},
	ProdTabEntry{
		String: `TemplateForBeginPrefix : template_block_start "for"	<< NewTemplateForBlock(X[0]) >>`,
		Id:         "TemplateForBeginPrefix",
		NTType:     16,
		Index:      79,
		NumSymbols: 2,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return NewTemplateForBlock(X[0])
		},
	},
	ProdTabEntry{
		String: `TemplateForBeginPrefix : TemplateForBeginPrefix Element	<< WithExtraChild(X[0], X[1]) >>`,
		Id:         "TemplateForBeginPrefix",
		NTType:     16,
		Index:      80,
		NumSymbols: 2,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return WithExtraChild(X[0], X[1])
		},
	},
	ProdTabEntry{
		String: `TemplateForEnd : template_block_start "endfor" template_block_end	<< X[2], nil >>`,
		Id:         "TemplateForEnd",
		NTType:     17,
		Index:      81,
		NumSymbols: 3,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return X[2], nil
		},
	},
	ProdTabEntry{
		String: `TemplateComment : template_comment	<< NewTemplateComment(X[0]) >>`,
		Id:         "TemplateComment",
		NTType:     18,
		Index:      82,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return NewTemplateComment(X[0])
		},
	},
	ProdTabEntry{
		String: `TemplateVariable : TemplateVariablePrefix template_variable_end	<< NewTemplateVariable(X[0], X[1]) >>`,
		Id:         "TemplateVariable",
		NTType:     19,
		Index:      83,
		NumSymbols: 2,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return NewTemplateVariable(X[0], X[1])
		},
	},
	ProdTabEntry{
		String: `TemplateVariablePrefix : template_variable_start	<<  >>`,
		Id:         "TemplateVariablePrefix",
		NTType:     20,
		Index:      84,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `TemplateVariablePrefix : TemplateVariablePrefix Element	<<  >>`,
		Id:         "TemplateVariablePrefix",
		NTType:     20,
		Index:      85,
		NumSymbols: 2,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return X[0], nil
		},
	},
}
